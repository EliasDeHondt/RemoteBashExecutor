############################
# @author Elias De Hondt   #
# @see https://eliasdh.com #
# @since 18/10/2024        #
############################
# functions.conf

function error_exit() { # Function: Error handling.
    echo -e "${red}$1${reset}"
    exit 1
}

function error_exit_ui() { # Function: Display an error message and exit.
    dialog --title "Error" --msgbox "$1" 5 60
    clear
    exit 1
}

function check_privileges() { # Function: Check that the script is not executed with elevated privileges.
    if [ "$EUID" -eq 0 ]; then
        error_exit "Do not run this script as root."
    fi
}

function check_dependencies() { # Function: Check for required dependencies.
    local REQUIRED_DEPENDENCIES=("$@")
    local MISSING_DEPENDENCIES=()

    # Check for variables.conf functions.conf
    if [ ! -f "./variables.conf" ] || [ ! -f "./functions.conf" ]; then
        error_exit "The configuration files are missing."
    fi

    for dep in "${REQUIRED_DEPENDENCIES[@]}"; do
        if ! command -v "$dep" &> /dev/null; then
            MISSING_DEPENDENCIES+=("$dep")
        fi
    done

    if [ ${#MISSING_DEPENDENCIES[@]} -eq 0 ]; then
        echo -e "${green}All required dependencies are installed!${reset}"
    else
        echo -e "${red}Missing dependencies:${reset}"
        for dep in "${MISSING_DEPENDENCIES[@]}"; do
            echo -e "- ${red}$dep${reset}"
        done
        error_exit "Install the missing dependencies and try again."
    fi
}

function remove_files() { # Function: Remove files.
    for file in "$@"; do
        if [ -e "$file" ]; then rm -r "$file"; fi
    done
}